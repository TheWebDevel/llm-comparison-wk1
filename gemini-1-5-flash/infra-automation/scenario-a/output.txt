 ```terraform
module "s3_encrypted_bucket" {
  source  = "git::https://github.com/your-org/your-repo.git//modules/s3-encrypted-bucket" # Replace with your module source

  bucket_name      = "my-encrypted-bucket-${random_id.bucket_suffix.hex}"
  server_side_encryption_algorithm = "AES256"
  logging_target_bucket = "my-s3-log-bucket" # Replace with your logging bucket
  iam_role_arn = "arn:aws:iam::123456789012:role/my-s3-access-role" # Replace with your role ARN

}


resource "random_id" "bucket_suffix" {
  byte_length = 8
}

resource "aws_s3_bucket" "encrypted_bucket" {
  bucket = module.s3_encrypted_bucket.bucket_name
  server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        sse_algorithm = module.s3_encrypted_bucket.server_side_encryption_algorithm
      }
    }
  }
  logging {
    target_bucket = module.s3_encrypted_bucket.logging_target_bucket
    target_prefix = "s3-logs/"
  }
  versioning {
    enabled = true
  }
}


resource "aws_iam_policy" "s3_access_policy" {
  name        = "s3-access-policy-${random_id.bucket_suffix.hex}"
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "s3:PutObject",
          "s3:GetObject"
        ]
        Effect   = "Allow"
        Resource = [
          "arn:aws:s3:::${aws_s3_bucket.encrypted_bucket.bucket}/*"
        ]
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "s3_access_policy_attachment" {
  role       = module.s3_encrypted_bucket.iam_role_arn
  policy_arn = aws_iam_policy.s3_access_policy.arn
}

```